:root {
    --primary-color: #0078d6;
    /*root는 저 위에 있다는 뜻, --primary-color 중요한컬러*/
    --secondary-color: #bbb;

    --body-color: #333333;

    --line-color: #dddddd;
    --white-color: #ffffff;
    /*white-color 많이 쓰는 컬러*/
    --backgroud-color: #f7f7f7;
}

html {
    font-size: 62.5%;
    /*10px??폰트 사이즈 크게 벌어지는걸 예방한다. 6.25%이렇게 쓰면 안되고 10단위로 사용해야한다.*/
}

body {
    font-size: 1.6rem;
    /*10px이 1rem, 1.6rem이 16px이 된다.*/
}

#header {

    position: fixed;
    top: 0;
    left: 0;
    right: 0;

    z-index: 999;

}

#header.on {
    background: var(--white-color);
    border-bottom: 1px solid #ddd;

}

#header .hd_wrap {
    position: relative;
    display: flex;
    justify-content: space-between;
    align-items: center;

    max-width: 141rem;
    margin: 0 auto;

    height: 12rem;
}

#header .hd_wrap h1 a {
    display: block;
    width: 4rem;
    height: 4rem;
    background: url(../images/logo.svg) no-repeat center center/cover;

}

#header.on .hd_wrap h1 a {
    background: url(../images/logo02.svg) no-repeat center center/cover;
}


#header h1 {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

#header .gnb>ul {
    display: flex;
    gap: 4rem;
}

#header a {
    white-space: nowrap;
}

#header .gnb>ul>li>a {
    display: block;
    line-height: 12rem;
    color: var(--white-color);
    transition: line-height 0.4s;
}

#header.on .gnb>ul>li>a {
    line-height: 8rem;
    color: var(--body-color);
}

#header .gnb>ul>li {
    position: relative;
}

#header .gnb>ul>li ul {
    position: absolute;

    top: auto;
    /*제자리*/
    left: 50%;

    padding: 1.6rem 0;
    /*아래위1.6 좌우0*/

    opacity: 0;
    visibility: hidden;
    /*애니메이션만들어줄거다.*/
    transform: translate(-50%, 0);
    /*0에서 -24px까지 올라온다.*/

    background: var(--white-color);
    border-radius: 8px;
    box-shadow: 0 0 4px rgba(0, 0, 0, 0.25);
    /*좌우안떨어지고4px*/

    transition: 0.4s;
}

#header .gnb>ul>li:hover ul {
    opacity: 1;
    visibility: visible;
    transform: translate(-50%, -12px);
    /*애니메이션만드는방법*/
}

#header .gnb>ul>li:focus-within ul {
    /*focus-within 탭키 눌렀을때 메뉴 다 나올 수 있게 하는 방법*/
    opacity: 1;
    visibility: visible;
    transform: translate(-50%, -12px);
}

#header .gnb>ul>li ul a {
    display: block;
    line-height: 4rem;
    padding: 0 4rem;
    /*좌우로4rem*/
    text-align: center;
}

#header .utils {
    display: flex;
    gap: 1.6rem;
}

#header .utils a {}


#header.on .utils a img {
    filter: invert();

}

.main_visual {
    position: relative;
}

.main_visual .main_visual_slide {}

.main_visual .main_visual_slide .itm {
    position: relative;
    height: 100vh;
    overflow: hidden;
}

.main_visual .main_visual_slide .itm .bg {
    position: absolute;
    inset: 0 0 0 0;
}

.main_visual .main_visual_slide .itm01 .bg {
    background: url(../images/main_visual01.jpg) no-repeat center center/cover;
}

.main_visual .main_visual_slide .itm02 .bg {
    background: url(../images/main_visual02.avif) no-repeat center center/cover;
}

.main_visual .main_visual_slide .itm03 .bg {
    background: url(../images/main_visual03.jpg) no-repeat center center/cover;
}


.main_visual .arrows {
    position: absolute;
    top: 50%;
    left: 50%;

    z-index: 2;

    /*display: flex;
    justify-content: space-between;
    이거 써도 쉽게 양쪽으로 보낼 수 있다. 우리가 배운 방식 아님*/

    max-width: 160rem;
    width: 100%;

    transform: translate(-50%, -50%);

}

.main_visual:hover .arrows {}

.main_visual .arrows button {
    position: absolute;
    /*양쪽버튼 늘리기 위해 사용, main_visual에 기준 잡아줘야한다.*/
    top: 0;

    width: 8rem;
    height: 8rem;
    background: rgba(0, 0, 0, 0.25);
    border-radius: 50%;

    transform: translate(0, -50%);
    /*100vh에서 가운데위치 top0도 적어줘야됨*/
}

.main_visual .arrows .prev {
    left: 0;
    /*top은 auto인 상태. 양쪽 늘리기 됨*/
}

.main_visual .arrows .next {
    right: 0;
    /*top은 auto인 상태. 양쪽 늘리기 됨*/
}

.main_visual .slg {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);

    max-width: 141rem;
    width: 100%;
    /*쪼그라든거 펴준다.*/

    text-align: left;
}

.main_visual .slg strong {
    margin-top: 4rem;
    margin-bottom: 4rem;
    color: var(--white-color);
    font-size: 4rem;
    font-weight: 600;
    line-height: 2.4rem;
    /*line-height: 2.4rem를 적어서 fontsize를 내맘대로 줄 수 있다.*/
}

.main_visual .slg p {
    margin-top: 4rem;
    margin-bottom: 4rem;
    color: var(--white-color);
    font-size: 1.6rem;
    font-weight: 400;
    line-height: 2.4rem;
    /*line-height: 2.4rem를 적어서 fontsize를 내맘대로 줄 수 있다.*/
}


.main_visual .arrows {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);

    max-width: 169.6rem;
    width: 100%;
    display: flex;
    justify-content: space-between;
}

.main_visual .arrows button {
    position: absolute;
    top: 0;
    transform: translate(0, -50%);

    width: 80px;
    height: 80px;


    border: 2px solid var(--white-color);
    box-sizing: border-box;

}

.main_visual .arrows button img {
    width: 32px;
    height: 32px;
}

.main_visual .arrows .prev {}

.main_visual .arrows .next {}

.main_visual .scroll {
    position: absolute;
    left: 50%;
    bottom: 0;

    z-index: 2;

    transform: translate(-50%, 0);
}

/* 여기부터 가로배치 박스 잡아 사용하는 방법 */

.main_models {}


.main_models .title {
    text-align: center;
}

.main_models .title::before {
    content: "";
    position: absolute;

    /* 슬라이드 귀퉁이에 만들거다 */
    top: 0;
    left: 0;



    transform: translate(-45%, -40%);

    z-index: -1;

    border: 3.5rem solid var(--secondary-color);

    border-radius: 50% 50% 0 50%;
}

.main_models .tab_models {
    display: flex;
    justify-content: center;

}

.main_models .tab_models button {
    position: relative;
    height: 40px;
    padding: 0 16px;
    border-bottom: 1px solid #ddd;
}

.main_models .tab_models button.on {
    color: var(--primary-color);
    font-weight: bold;
}

.main_models .tab_models button:hover {
    color: var(--primary-color);
    font-weight: bold;
}


.main_models .tab_models button::after {
    content: "";
    position: absolute;
    bottom: -1px;
    left: 50%;
    transform: translate(-50%, 0);
    width: 0;
    height: 2px;
    background: var(--primary-color);
    transition: 0.5s;
}


.main_models .tab_models button.on::after {
    width: 100%;
}

.main_models .tab_models_content .con {
    display: flex;
    gap: 30px;
    visibility: hidden;
    height: 0;
    overflow: hidden;
}

.main_models .tab_models_content .con.on {
    visibility: visible;
    height: auto;
}



.main_models .tab_models_content .con>* {
    flex: 1;
}

.main_models .tab_models_content .con img {
    margin-top: 3rem;
    background: var(--backgroud-color);
    cursor: pointer;


    transform: scale(1);
    transition: 0.4s;
}

.main_models .tab_models_content .con img:hover {
    transform: scale(1.1);
}

.main_models .tab_models_content .con p {
    margin-top: 16px;
    text-align: center;
}



.main_advice {
    position: relative;
    background: var(--backgroud-color);
}

.main_advice .title {
    text-align: center;
}



.main_advice .inner {
    display: flex;
    /* align-items: center; */
    gap: 3rem;

}

.main_advice .inner img {

    object-fit: cover;
}

.main_advice .inner .itm {}

.main_advice .inner .itm strong {
    display: block;
    font-size: 1.8rem;
    line-height: 2.4rem;
    margin-top: 1.6rem;
    font-weight: 500;
}


.main_advice .inner .itm p {
    font-size: 1.6rem;
    margin-top: 1.6rem;
    min-height: 4.8rem;

}

.main_advice .inner .itm a {

    position: relative;
    z-index: 1;
    display: inline-flex;
    align-items: center;
    padding: 0 2.4rem;
    height: 5rem;
    border: 2px solid var(--body-color);

    color: var(--body-color);
    font-size: 1.6rem;

    overflow: hidden;
    /*before background 넣고 튀어나온 색 다 잘라냄*/
}

.main_advice .inner .itm .btn_wrap {
    margin-top: 1.6rem;
}


.main_advice .default_btn::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;

    z-index: -1;
    /*색을 뒤로 보낸다.*/

    height: 0;
    background: var(--primary-color);

    transition: 0.4s;
}

.main_advice .default_btn:hover::before {
    /*::띄우면 안된다!!*/
    top: auto;
    bottom: 0;
    /*이해안된다.  top: auto;탑값을 무력화시킨다는뜻 bottom: 0;마우스작동될때탑으로*/
    height: 100%;
}

.main_advice .default_btn::after {
    content: "";
    margin-left: 8px;
    /*1픽셀은 rem넣지마라, flex되어있으니 margin쓰면됨 gap도 가능함*/
    width: 1.4rem;
    height: 1.4rem;
    background: url(../images/arrow-right.svg) no-repeat center center/2rem;
}

.main_store {
    position: relative;
}

.main_store .title {
    text-align: center;
}

.main_store .itm strong {
    display: block;
    font-size: 1.8rem;
    line-height: 2.4rem;
    margin-top: 1.6rem;
    font-weight: 500;
}


.main_store .inner .itm p {
    font-size: 1.6rem;
    margin-top: 1.6rem;
    min-height: 4.8rem;

}

.main_store .inner .itm a {

    position: relative;
    z-index: 1;
    display: inline-flex;
    align-items: center;
    padding: 0 2.4rem;
    height: 5rem;
    border: 2px solid var(--body-color);

    color: var(--body-color);
    font-size: 1.6rem;

    overflow: hidden;
    /*before background 넣고 튀어나온 색 다 잘라냄*/
}


.main_store .inner .itm .btn_wrap {
    margin-top: 1.6rem;
}


.main_store .default_btn::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;

    z-index: -1;
    /*색을 뒤로 보낸다.*/

    height: 0;
    background: var(--primary-color);

    transition: 0.4s;
}

.main_store .default_btn:hover::before {
    /*::띄우면 안된다!!*/
    top: auto;
    bottom: 0;
    /*이해안된다.  top: auto;탑값을 무력화시킨다는뜻 bottom: 0;마우스작동될때탑으로*/
    height: 100%;
}

.main_store .default_btn::after {
    content: "";
    margin-left: 8px;
    /*1픽셀은 rem넣지마라, flex되어있으니 margin쓰면됨 gap도 가능함*/
    width: 1.4rem;
    height: 1.4rem;
    background: url(../images/arrow-right.svg) no-repeat center center/2rem;
}



.main_store .page {
    /*도트 내맘대로 바꾸기*/
    display: flex;
    justify-content: center;

    /*도트 사진위로 올리기*/
    margin-top: 2.4rem;

}

.main_store .page span {
    width: 8px;
    height: 8px;
    background: var(--primary-color);
    border-radius: 8px;
    /*높이의 반만큼 설정하면된다.*/
    opacity: 1;
    /*opacity도트흐린거진하게*/
    transition: 0.4s;
}

.main_store .page span.swiper-pagination-bullet-active {
    width: 80px;
    /*페이지검사해서swiper-pagination-bullet-active가져왔음*/
}


.main_store .arrows {
    position: absolute;
    top: 50%;
    left: 50%;
    right: 0;
    z-index: 2;

    max-width: 156rem;
    width: 100%;
    /*999를 주면 안된다. 그럼 나중에 헤더를 덮어버린다.*/
    transform: translate(-50%, -50%);
    /*좌우로0아래위로-50%*/
}

.main_store .arrows button {
    position: absolute;
    top: 0;

    /*버튼을 동그랗게 만들거다*/
    width: 4rem;
    height: 4rem;

    border: 2px solid var(--body-color);
    border-radius: 50%;
    background: var(--white-color);
    /*뒤가 비치면 안되니까*/
    box-shadow: 0 0 2px rgba(0, 0, 0, 0.25);
    /*box-shadow 약간 번지는 효과*/
}

.main_store .arrows .prev {
    left: 0;
    transform: translate(0, -50%);
}

.main_store .arrows .next {
    right: 0;
    transform: translate(0, -50%);
}

.main_store .arrows button:hover {
    background: var(--secondary-color);

}


.main_store .arrows button.active {
    background: var(--secondary-color);

}



.main_list {}

.main_list .inner {
    display: flex;
    flex-wrap: wrap;
    gap: 3rem;
}

.main_list .itm {
    position: relative;
    display: block;
    background: var(--backgroud-color);
    width: calc((100% - 9rem) / 4);
    padding: 32px;
}

.main_list .itm::before {
    content: "";
    position: absolute;
    left: 0;
    top: 0;
    width: 0;
    height: 0;
    border-top: 1px solid var(--primary-color);
    border-left: 1px solid var(--primary-color);

    transition: 0.2s;

    visibility: hidden;
}

.main_list .itm:hover::before {
    width: 100%;
    height: 100%;

    visibility: visible;
}

.main_list .itm::after {
    content: "";
    position: absolute;
    right: 0;
    bottom: 0;
    width: 0;
    height: 0;
    border-bottom: 1px solid var(--primary-color);
    border-right: 1px solid var(--primary-color);

    transition: 0.2s;

    visibility: hidden;
}

.main_list .itm:hover::after {
    width: 100%;
    height: 100%;

    visibility: visible;
}

.main_list .itm strong {
    display: block;
    text-align: center;
    font-weight: 600;
}

.main_list .itm p {
    text-align: center;
    font-size: 1.5rem;
    line-height: 1.6;
    margin-top: 1.6rem;
}


#footer {
    padding: 64px 0 64px 0;
    background: var(--body-color);
}

#footer a {
    color: var(--white-color);
}

#footer .inner {
    display: flex;
    flex-direction: column;
    align-items: center;
}

#footer .customer {
    display: flex;
    gap: 24px;
}


#footer p {
    display: flex;
    gap: 32px;
    color: var(--white-color);
    font-size: 14px;
    line-height: 24px;
}

#footer p span {
    position: relative;
    margin-top: 16px;
    font-size: 14px;
}

#footer p span~span::before {
    content: "";
    position: absolute;
    top: 50%;
    left: -16px;
    width: 1px;
    height: 0.5em;
    background: var(--line-color);

    transform: translate(0, -50%);
}

#footer address {
    color: #fff;
    margin-top: 16px;
    font-size: 12px;
}


.to_top {
    position: fixed;
    bottom: 80px;
    right: 160px;
    z-index: 999;

    width: 40px;
    height: 40px;

    background: var(--secondary-color);
    border-radius: 50%;
    opacity: 0;
    visibility: hidden;
    transition: 1s;

}

.to_top.on {
    opacity: 1;
    visibility: visible;
    right: 160px;

}